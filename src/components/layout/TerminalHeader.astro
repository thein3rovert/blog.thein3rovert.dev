---
import { menuLinks } from "@/site.config";
import { getWordCount, formatStatDate } from "@/utils/terminal";

import type { CollectionEntry } from "astro:content";

interface Props {
	content?: CollectionEntry<"post"> | undefined; // Make content optional
}

const url = new URL(Astro.request.url);
const currentPath = url.pathname;

const { content } = Astro.props;

// Only destructure data and body if content exists
const data = content?.data;
const body = content?.body;

// Function to generate terminal-friendly short names
function getShortName(title: string): string {
	const shortNames: Record<string, string> = {
		"Example OG Social Image": "social-image",
		"Example Cover Image": "cover-image",
		"Adding Webmentions to Astro Cactus": "webmentions-setup",
		"How to setup ddutils on Nixos": "ddutils-setup",
		"Resolving No Space Left on Device Error on NixOS": "nixos-disk-fix",
		"Changing your Oh-my-posh themes in Nix-OS": "posh-themes",
		"Creating my first nix package": "first-nix-pkg",
		"How to setup Traefik on nixos": "traefik-setup",
		"Freshrss installation on nixos rant": "freshrss-install",
		"Deploying my personal blog using Docker and Traefik": "blog-docker-deploy",
		"Automating My Blog Deployment: A Journey from Manual to Bash": "deploy-automation",
	};

	return (
		shortNames[title] ||
		title
			.toLowerCase()
			.replace(/[^a-z0-9\s]/g, "")
			.replace(/\s+/g, "-")
			.substring(0, 20)
	);
}

// Dynamic content for blog posts vs static content for other pages
let filePath: string;
let fileSize: string;
let modifyDate: string;
let birthDate: string;

if (content && data) {
	// Blog post - show dynamic information
	const wordCount = body ? getWordCount(body) : 0;
	const category = data.tags?.[0] || "blog";
	const shortTitle = getShortName(data.title);
	const publishDate = new Date(data.publishDate);
	const updatedDate = data.updatedDate ? new Date(data.updatedDate) : publishDate;

	filePath = `/home/thein3rovert/posts/${category}/${shortTitle}`;
	fileSize = `${wordCount} words`;
	modifyDate = formatStatDate(updatedDate);
	birthDate = formatStatDate(publishDate);
} else {
	// Static content for non-blog pages
	const currentDate = new Date();
	const staticBirthDate = formatStatDate(new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)); // 30 days ago

	// Determine current file path based on route
	if (currentPath === "/") {
		filePath = "/home/thein3rovert";
		fileSize = "16488 words";
	} else if (currentPath.startsWith("/posts/")) {
		filePath = "/home/thein3rovert/posts";
		fileSize = "12000 words";
	} else if (currentPath.startsWith("/about")) {
		filePath = "/home/thein3rovert/about";
		fileSize = "800 words";
	} else if (currentPath.startsWith("/notes")) {
		filePath = "/home/thein3rovert/notes";
		fileSize = "3500 words";
	} else if (currentPath.startsWith("/code")) {
		filePath = "/home/thein3rovert/code";
		fileSize = "2000 words";
	} else if (currentPath.startsWith("/terminal")) {
		filePath = "/home/thein3rovert/posts";
		fileSize = "12000 words";
	} else {
		filePath = "/home/thein3rovert/posts";
		fileSize = "16488 words";
	}

	modifyDate = formatStatDate(currentDate);
	birthDate = staticBirthDate;
}
---

<header class="bg-global-bg mb-8 w-full font-mono text-xs" id="main-header">
	<div class="mx-auto max-w-6xl px-4 py-2 sm:px-8">
		<!-- Terminal file header -->
		<div class="mb-2 space-y-0 leading-tight">
			<div class="hover:text-accent cursor-pointer">
				<a href="/" class="hover:underline">
					File: {filePath}
				</a>
			</div>
			<div>Size: {fileSize}</div>
			<div>Access: (0644/-rw-r--r--) Uid: ( 1000/thein3rovert) Gid: ( 100 / users)</div>
			<div>Modify: {modifyDate}</div>
			<div>Birth: {birthDate}</div>
		</div>

		<!-- Navigation -->
		<div class="flex flex-wrap items-center">
			{
				menuLinks.map((link, index) => (
					<span>
						<a
							href={link.path}
							class={`hover:underline ${
								currentPath === link.path ||
								(link.path !== "/" && currentPath.startsWith(link.path))
									? "text-accent font-bold"
									: "text-accent"
							}`}
							data-astro-prefetch
						>
							{link.title}
						</a>
						{index < menuLinks.length - 1 && <span class="ml-1 text-gray-400">|</span>}
					</span>
				))
			}
			<div class="ml-auto">
				<div class="scale-75 text-xs">
					<!-- <ThemeToggle /> -->
				</div>
			</div>
		</div>
	</div>
</header>

<style>
	.font-mono {
		font-family: "MonoLisa", ui-monospace, "Courier New", Courier, monospace;
		letter-spacing: 0;
	}

	a {
		color: inherit;
		text-decoration: none;
	}

	a:hover {
		text-decoration: underline;
	}

	/* Terminal header styling - full width at top */
	header {
		backdrop-filter: blur(8px);
		border-bottom: 2px solid #4a5568;
		box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
	}

	/* Dark mode adjustments */
	:global(.dark) header {
		border-bottom-color: #718096;
		background: rgba(0, 0, 0, 0.8);
	}

	:global(.light) header {
		background: rgba(255, 255, 255, 0.9);
	}
</style>
